// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: v1/onion.proto

package apiv1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OnionClient is the client API for Onion service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OnionClient interface {
}

type onionClient struct {
	cc grpc.ClientConnInterface
}

func NewOnionClient(cc grpc.ClientConnInterface) OnionClient {
	return &onionClient{cc}
}

// OnionServer is the server API for Onion service.
// All implementations must embed UnimplementedOnionServer
// for forward compatibility
type OnionServer interface {
	mustEmbedUnimplementedOnionServer()
}

// UnimplementedOnionServer must be embedded to have forward compatible implementations.
type UnimplementedOnionServer struct {
}

func (UnimplementedOnionServer) mustEmbedUnimplementedOnionServer() {}

// UnsafeOnionServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OnionServer will
// result in compilation errors.
type UnsafeOnionServer interface {
	mustEmbedUnimplementedOnionServer()
}

func RegisterOnionServer(s grpc.ServiceRegistrar, srv OnionServer) {
	s.RegisterService(&Onion_ServiceDesc, srv)
}

// Onion_ServiceDesc is the grpc.ServiceDesc for Onion service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Onion_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "eventsauce.api.v1.Onion",
	HandlerType: (*OnionServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "v1/onion.proto",
}
